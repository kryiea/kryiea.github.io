import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,e as o,o as r}from"./app-DRR9Yo7Y.js";const l="/assets/sql%20%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.001-B2nR_dfp.png",n="/assets/sql%20%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.002-BcSGXCY9.png",a={};function c(p,t){return r(),i("div",null,t[0]||(t[0]=[o('<p><strong>sql 执行顺序</strong></p><p>执行顺序</p><figure><img src="'+l+'" alt="..." tabindex="0" loading="lazy"><figcaption>...</figcaption></figure><ol><li>先执行 from、join 来确定表之间的连接关系，得到初步数据</li><li>where 对数据进行初步的筛选</li><li>group by 分组</li><li>各组分别执行 having 中的普通筛选或聚合函数的筛选</li><li>再把根据我们要的的数据进行 select，可以是普通字段查询也可以是获取聚合函数的查询结果。 如果是聚合函数，select 的查询结果会增加一条字段</li><li>将查询结果去重 distinct</li><li>最后合并各组的查询结果，按照 order by 的条件进行排序</li></ol><figure><img src="'+n+'" alt="..." tabindex="0" loading="lazy"><figcaption>...</figcaption></figure>',5)]))}const g=e(a,[["render",c],["__file","sql执行顺序.html.vue"]]),y=JSON.parse('{"path":"/back-end/mysql/sql/sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.html","title":"MySQL SQL执行顺序详解","lang":"zh-CN","frontmatter":{"title":"MySQL SQL执行顺序详解","description":"深入分析MySQL SQL语句的执行顺序和查询优化原理","date":"2024-01-01T00:00:00.000Z","category":["数据库","MySQL"],"tag":["MySQL","SQL优化","查询执行","性能优化"],"head":[["meta",{"property":"og:url","content":"https://kryiea.cn/back-end/mysql/sql/sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"🧐kryiea"}],["meta",{"property":"og:title","content":"MySQL SQL执行顺序详解"}],["meta",{"property":"og:description","content":"深入分析MySQL SQL语句的执行顺序和查询优化原理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-31T15:53:39.000Z"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:tag","content":"SQL优化"}],["meta",{"property":"article:tag","content":"查询执行"}],["meta",{"property":"article:tag","content":"性能优化"}],["meta",{"property":"article:published_time","content":"2024-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-31T15:53:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL SQL执行顺序详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-31T15:53:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kryiea\\",\\"url\\":\\"https://github.com/kryiea\\",\\"email\\":\\"kryieaa@outlook.com\\"}]}"]]},"headers":[],"git":{"createdTime":1743436419000,"updatedTime":1743436419000,"contributors":[{"name":"kryiea","email":"1582877056@qq.com","commits":1}]},"readingTime":{"minutes":0.77,"words":232},"filePathRelative":"back-end/mysql/sql/sql执行顺序.md","localizedDate":"2024年1月1日","excerpt":"<p><strong>sql 执行顺序</strong></p>\\n<p>执行顺序</p>\\n<figure><figcaption>...</figcaption></figure>\\n<ol>\\n<li>先执行 from、join 来确定表之间的连接关系，得到初步数据</li>\\n<li>where 对数据进行初步的筛选</li>\\n<li>group by 分组</li>\\n<li>各组分别执行 having 中的普通筛选或聚合函数的筛选</li>\\n<li>再把根据我们要的的数据进行 select，可以是普通字段查询也可以是获取聚合函数的查询结果。\\n如果是聚合函数，select 的查询结果会增加一条字段</li>\\n<li>将查询结果去重 distinct</li>\\n<li>最后合并各组的查询结果，按照 order by 的条件进行排序</li>\\n</ol>"}');export{g as comp,y as data};
