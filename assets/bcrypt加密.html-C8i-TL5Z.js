import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,d as t,e as l,o as h}from"./app-DRR9Yo7Y.js";const e="/assets/bcrypt%20%E5%8A%A0%E5%AF%86.001-EoYWFf-U.png",p={};function k(r,s){return h(),a("div",null,[s[0]||(s[0]=n("p",null,"本文详细介绍Go语言中bcrypt加密的原理及实现方法。",-1)),t(" more "),s[1]||(s[1]=l('<h2 id="_1-密码安全概述" tabindex="-1"><a class="header-anchor" href="#_1-密码安全概述"><span>1. 密码安全概述</span></a></h2><h3 id="_1-1-攻击密码的主要方法" tabindex="-1"><a class="header-anchor" href="#_1-1-攻击密码的主要方法"><span>1.1 攻击密码的主要方法</span></a></h3><ol><li><strong>字典攻击</strong>：使用包含常见密码的字典尝试破解密码</li><li><strong>暴力攻击</strong>：通过尝试所有可能的字符组合来破解密码</li></ol><h3 id="_1-2-彩虹表" tabindex="-1"><a class="header-anchor" href="#_1-2-彩虹表"><span>1.2 彩虹表</span></a></h3><p>彩虹表是一个用于加密散列函数逆运算的预先计算好的表（就是在网上搜集的各种字符组合的Hash加密结果）。</p><h2 id="_2-密码加密策略" tabindex="-1"><a class="header-anchor" href="#_2-密码加密策略"><span>2. 密码加密策略</span></a></h2><h3 id="_2-1-加密与加盐" tabindex="-1"><a class="header-anchor" href="#_2-1-加密与加盐"><span>2.1 加密与加盐</span></a></h3><ul><li><strong>加密</strong>：Hash加密，即使两层md5算法加密，还是可能通过彩虹表的方式破译</li><li><strong>加盐</strong>：人为的通过一组随机字符与用户原密码的组合形成一个新的字符，从而增加破译的难度</li></ul><h3 id="_2-2-加盐的安全性" tabindex="-1"><a class="header-anchor" href="#_2-2-加盐的安全性"><span>2.2 加盐的安全性</span></a></h3><p>密码使用了盐，但没有为每个密码使用唯一的盐，那么攻击者要做的就是手动生成彩虹表，对每个组合使用盐，然后进行查找。</p><p>如果你对每个密码使用唯一的盐，则攻击者需要针对每个密码为每个组合生成一个列表再去查找。这是另外一种类型的攻击，即暴力攻击。</p><h3 id="_2-3-暴力破解" tabindex="-1"><a class="header-anchor" href="#_2-3-暴力破解"><span>2.3 暴力破解</span></a></h3><p>暴力攻击通过反复尝试猜测密码来破解密码。</p><h3 id="_2-4-传统加密算法的局限" tabindex="-1"><a class="header-anchor" href="#_2-4-传统加密算法的局限"><span>2.4 传统加密算法的局限</span></a></h3><p>MD5或SHA-1（或SHA-256，SHA-512等）是消息摘要算法，旨在快速验证给定消息是否未被篡改。</p><p>与慢速哈希（例如bcrypt，scrypt和pbkdf2）不同，MD5、SHA-x不是为密码设计的算法。</p><h2 id="_3-bcrypt加密原理" tabindex="-1"><a class="header-anchor" href="#_3-bcrypt加密原理"><span>3. bcrypt加密原理</span></a></h2><h3 id="_3-1-bcrypt哈希字符串的组成" tabindex="-1"><a class="header-anchor" href="#_3-1-bcrypt哈希字符串的组成"><span>3.1 bcrypt哈希字符串的组成</span></a></h3><p>bcrypt哈希由多个部分组成。这些部分用于确定创建哈希的设置，从而可以在不需要任何其他信息的情况下对其进行验证。</p><figure><img src="'+e+`" alt="bcrypt哈希组成" tabindex="0" loading="lazy"><figcaption>bcrypt哈希组成</figcaption></figure><p>上图是一个bcrypt哈希的示例图，其由四部分组成：</p><ul><li><strong>Prefix</strong>：说明了使用的bcrypt的版本</li><li><strong>Cost</strong>：是进行哈希的次数 - 数字越大生成bcrypt的速度越慢，成本越大。同样也意味着如果密码库被盗，攻击者想通过暴力破解的方法猜测出用户密码的成本变得越昂贵</li><li><strong>Salt</strong>：是添加到要进行哈希的字符串中的随机字符（21.25个字符），所以使用bcrypt时不需要我们在表里单独存储Salt</li><li><strong>Hashed Text</strong>：是明文字符串最终被bcrypt应用这些设置哈希后的哈希文本</li></ul><p>如果用户使用非常简单的密码例如password或123456，另外无论什么方法：每个密码加单独的盐进行哈希，使用bcrypt进行哈希等等，还是能被猜测出来的，所以在用户设置密码时应该禁止他们输入简单的密码。</p><h2 id="_4-go语言中使用bcrypt" tabindex="-1"><a class="header-anchor" href="#_4-go语言中使用bcrypt"><span>4. Go语言中使用bcrypt</span></a></h2><h3 id="_4-1-bcrypt包介绍" tabindex="-1"><a class="header-anchor" href="#_4-1-bcrypt包介绍"><span>4.1 bcrypt包介绍</span></a></h3><p>通过<code>golang.org/x/crypto/bcrypt</code>包提供使用bcrypt函数。</p><p>bcrypt包只提供了三个函数：</p><ul><li><strong>bcrypt.CompareHashAndPassword()</strong>：用于比对bcrypt哈希字符串和提供的密码明文文本是否匹配</li><li><strong>bcrypt.GenerateFromPassword()</strong>：以给定的Cost返回密码的bcrypt哈希。如果给定的成本小于MinCost，则将成本设置为DefaultCost（10）</li><li><strong>bcrypt.Cost()</strong>：返回用于创建给定bcrypt哈希的哈希成本。将来密码系统为了应对更大的计算能力而增加哈希成本时，该功能可以用于确定哪些密码需要更新</li></ul><h3 id="_4-2-使用示例" tabindex="-1"><a class="header-anchor" href="#_4-2-使用示例"><span>4.2 使用示例</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ./handler/password_hashing.go</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> handler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;golang.org/x/crypto/bcrypt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;net/http&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> HashPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">password</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> bcrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GenerateFromPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CheckPasswordHash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">hash</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> bcrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CompareHashAndPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> GetHashingCost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">hashedPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    cost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> bcrypt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hashedPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 为了简单忽略错误处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cost</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> PassWordHashingHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">w</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ResponseWriter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    password</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;secret&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> HashPassword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 为了简单忽略错误处理</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fprintln</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Password:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fprintln</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hash:    &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    match</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CheckPasswordHash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fprintln</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Match:   &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">match</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    cost</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> GetHashingCost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fprintln</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Cost:    &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cost</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Password: secret</span></span>
<span class="line"><span>Hash:     $2a$14$Ael8nW7UF/En/iI7LGdyBuaIO8VREbL2CAShRN0EUQHqtmOHXh.XK</span></span>
<span class="line"><span>Match:    true</span></span>
<span class="line"><span>Cost:     14</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32))])}const g=i(p,[["render",k],["__file","bcrypt加密.html.vue"]]),c=JSON.parse('{"path":"/back-end/go/framework/encipherframework/bcrypt%E5%8A%A0%E5%AF%86.html","title":"Go语言bcrypt加密详解","lang":"zh-CN","frontmatter":{"title":"Go语言bcrypt加密详解","description":"详细介绍Go语言中bcrypt加密的原理、使用方法及最佳实践","date":"2024-01-01T00:00:00.000Z","category":["Go","加密"],"tag":["Go","bcrypt","密码加密","安全"],"head":[["meta",{"property":"og:url","content":"https://kryiea.cn/back-end/go/framework/encipherframework/bcrypt%E5%8A%A0%E5%AF%86.html"}],["meta",{"property":"og:site_name","content":"🧐kryiea"}],["meta",{"property":"og:title","content":"Go语言bcrypt加密详解"}],["meta",{"property":"og:description","content":"详细介绍Go语言中bcrypt加密的原理、使用方法及最佳实践"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-31T15:53:39.000Z"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"bcrypt"}],["meta",{"property":"article:tag","content":"密码加密"}],["meta",{"property":"article:tag","content":"安全"}],["meta",{"property":"article:published_time","content":"2024-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-31T15:53:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go语言bcrypt加密详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-31T15:53:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kryiea\\",\\"url\\":\\"https://github.com/kryiea\\",\\"email\\":\\"kryieaa@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 密码安全概述","slug":"_1-密码安全概述","link":"#_1-密码安全概述","children":[{"level":3,"title":"1.1 攻击密码的主要方法","slug":"_1-1-攻击密码的主要方法","link":"#_1-1-攻击密码的主要方法","children":[]},{"level":3,"title":"1.2 彩虹表","slug":"_1-2-彩虹表","link":"#_1-2-彩虹表","children":[]}]},{"level":2,"title":"2. 密码加密策略","slug":"_2-密码加密策略","link":"#_2-密码加密策略","children":[{"level":3,"title":"2.1 加密与加盐","slug":"_2-1-加密与加盐","link":"#_2-1-加密与加盐","children":[]},{"level":3,"title":"2.2 加盐的安全性","slug":"_2-2-加盐的安全性","link":"#_2-2-加盐的安全性","children":[]},{"level":3,"title":"2.3 暴力破解","slug":"_2-3-暴力破解","link":"#_2-3-暴力破解","children":[]},{"level":3,"title":"2.4 传统加密算法的局限","slug":"_2-4-传统加密算法的局限","link":"#_2-4-传统加密算法的局限","children":[]}]},{"level":2,"title":"3. bcrypt加密原理","slug":"_3-bcrypt加密原理","link":"#_3-bcrypt加密原理","children":[{"level":3,"title":"3.1 bcrypt哈希字符串的组成","slug":"_3-1-bcrypt哈希字符串的组成","link":"#_3-1-bcrypt哈希字符串的组成","children":[]}]},{"level":2,"title":"4. Go语言中使用bcrypt","slug":"_4-go语言中使用bcrypt","link":"#_4-go语言中使用bcrypt","children":[{"level":3,"title":"4.1 bcrypt包介绍","slug":"_4-1-bcrypt包介绍","link":"#_4-1-bcrypt包介绍","children":[]},{"level":3,"title":"4.2 使用示例","slug":"_4-2-使用示例","link":"#_4-2-使用示例","children":[]}]}],"git":{"createdTime":1743436419000,"updatedTime":1743436419000,"contributors":[{"name":"kryiea","email":"1582877056@qq.com","commits":1}]},"readingTime":{"minutes":3.57,"words":1071},"filePathRelative":"back-end/go/framework/encipherframework/bcrypt加密.md","localizedDate":"2024年1月1日","excerpt":"<p>本文详细介绍Go语言中bcrypt加密的原理及实现方法。</p>\\n"}');export{g as comp,c as data};
