import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,d as l,e as r,o as n}from"./app-DRR9Yo7Y.js";const o={};function p(c,e){return n(),a("div",null,[e[0]||(e[0]=i("p",null,"本文详细介绍二叉堆的基本原理、分类及实现方式。",-1)),l(" more "),e[1]||(e[1]=r('<h2 id="_1-基本原理" tabindex="-1"><a class="header-anchor" href="#_1-基本原理"><span>1. 基本原理</span></a></h2><p>二叉堆是一种特殊的二叉树。能动态排序的数据结构主要有两种：二叉堆和二叉搜索树。</p><h3 id="_1-1-分类" tabindex="-1"><a class="header-anchor" href="#_1-1-分类"><span>1.1 分类</span></a></h3><p>二叉堆主要分为两类：</p><ol><li>小顶堆</li><li>大顶堆</li></ol><p>对于小顶堆，每个节点下方的所有节点的值都比它大，那么不难想象根节点就是整棵树上的最小值。</p><p>同理，大顶堆的根节点就是整棵树上的最大值。所以二叉堆可以辅助我们快速找到最大值或最小值。</p><h3 id="_1-2-api操作" tabindex="-1"><a class="header-anchor" href="#_1-2-api操作"><span>1.2 API操作</span></a></h3><p>二叉堆的主要操作包括：</p><ol><li>sink() - 下沉操作</li><li>swim() - 上浮操作</li><li>peek() - 查看堆顶元素</li></ol><ul><li>Push 插入新元素，直接放在底层的最右节点，保持完全二叉树的特点。再通过swim()上浮到合适位置。</li><li>Pop 删除新元素，把堆顶元素删除，把二叉树底层的最右侧元素摘除并移动到堆顶，保持完全二叉树特点。在通过sink()下沉到合适位置。</li></ul><h2 id="_2-实现方式" tabindex="-1"><a class="header-anchor" href="#_2-实现方式"><span>2. 实现方式</span></a></h2><h3 id="_2-1-链式-麻烦" tabindex="-1"><a class="header-anchor" href="#_2-1-链式-麻烦"><span>2.1 链式（麻烦）</span></a></h3><p>链式实现需要通过遍历找到最底层的最右节点，实现较为复杂。</p><h3 id="_2-2-数组" tabindex="-1"><a class="header-anchor" href="#_2-2-数组"><span>2.2 数组</span></a></h3><p>数组实现可以方便地定位最底层的最右节点，是二叉堆的常用实现方式。</p>',16))])}const h=t(o,[["render",p],["__file","二叉堆.html.vue"]]),m=JSON.parse('{"path":"/back-end/algorithm/%E4%BA%8C%E5%8F%89%E5%A0%86.html","title":"二叉堆详解","lang":"zh-CN","frontmatter":{"title":"二叉堆详解","description":"详细介绍二叉堆的基本概念、实现原理及应用","date":"2024-01-01T00:00:00.000Z","category":["数据结构","算法"],"tag":["二叉堆","优先队列","堆"],"head":[["meta",{"property":"og:url","content":"https://kryiea.cn/back-end/algorithm/%E4%BA%8C%E5%8F%89%E5%A0%86.html"}],["meta",{"property":"og:site_name","content":"🧐kryiea"}],["meta",{"property":"og:title","content":"二叉堆详解"}],["meta",{"property":"og:description","content":"详细介绍二叉堆的基本概念、实现原理及应用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-31T15:53:39.000Z"}],["meta",{"property":"article:tag","content":"二叉堆"}],["meta",{"property":"article:tag","content":"优先队列"}],["meta",{"property":"article:tag","content":"堆"}],["meta",{"property":"article:published_time","content":"2024-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-31T15:53:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉堆详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-31T15:53:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kryiea\\",\\"url\\":\\"https://github.com/kryiea\\",\\"email\\":\\"kryieaa@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 基本原理","slug":"_1-基本原理","link":"#_1-基本原理","children":[{"level":3,"title":"1.1 分类","slug":"_1-1-分类","link":"#_1-1-分类","children":[]},{"level":3,"title":"1.2 API操作","slug":"_1-2-api操作","link":"#_1-2-api操作","children":[]}]},{"level":2,"title":"2. 实现方式","slug":"_2-实现方式","link":"#_2-实现方式","children":[{"level":3,"title":"2.1 链式（麻烦）","slug":"_2-1-链式-麻烦","link":"#_2-1-链式-麻烦","children":[]},{"level":3,"title":"2.2 数组","slug":"_2-2-数组","link":"#_2-2-数组","children":[]}]}],"git":{"createdTime":1743436419000,"updatedTime":1743436419000,"contributors":[{"name":"kryiea","email":"1582877056@qq.com","commits":1}]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"back-end/algorithm/二叉堆.md","localizedDate":"2024年1月1日","excerpt":"<p>本文详细介绍二叉堆的基本原理、分类及实现方式。</p>\\n"}');export{h as comp,m as data};
